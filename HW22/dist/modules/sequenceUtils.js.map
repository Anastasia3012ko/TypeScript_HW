{"version":3,"file":"sequenceUtils.js","sourceRoot":"","sources":["../../src/modules/sequenceUtils.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,iBAAiB,CAAC,UAAkB;IAChD,IAAG,UAAU,GAAG,CAAC;QAAE,OAAO,EAAE,CAAC;IAE7B,MAAM,QAAQ,GAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAElC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE;QACxC,MAAM,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAC;QACjD,IAAI,IAAI,IAAI,UAAU;YAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,UAAkB;IACrD,MAAM,MAAM,GAAa,EAAE,CAAC;IAE5B,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,UAAU,EAAE,GAAG,EAAE,EAAE,CAAC;QAC3C,IACE,GAAG,KAAK,CAAC;YACT,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;iBACpE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,EAChC,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;IACH,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["export function generateFibonacci(lastNumber: number): number[] {\r\n    if(lastNumber < 0) return [];\r\n\r\n    const sequence: number[] = [0, 1];\r\n\r\n    Array.from({ length: lastNumber }, () => {\r\n    const next = sequence.at(-1)! + sequence.at(-2)!;\r\n    if (next <= lastNumber) sequence.push(next);\r\n    });\r\n    \r\n    return sequence.filter(n => n <= lastNumber);\r\n}\r\n\r\nexport function generatePrimeNumbers(lastNumber: number): number[] {\r\n  const primes: number[] = [];\r\n\r\n  for (let num = 2; num <= lastNumber; num++) {\r\n    if (\r\n      num === 2 ||\r\n      Array.from({ length: Math.floor(Math.sqrt(num)) - 1 }, (_, i) => i + 2)\r\n        .every(div => num % div !== 0)\r\n    ) {\r\n      primes.push(num);\r\n    }\r\n  }\r\n\r\n  return primes;\r\n}"]}