{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,SAAS;AACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAMxB,MAAM,cAAc,GAAmB,CAAC,KAAK,EAAE,EAAE;IAC7C,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,GAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;AAClF,CAAC,CAAA;AAED,MAAM,GAAG,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AACtD,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AAE1D,SAAS;AACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAOxB,MAAM,aAAa,GAA4B,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC;AAEvE,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;AACpD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;AAEzD,SAAS;AACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAIxB,MAAM,eAAe,GAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC;AAEtE,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,eAAe,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC;AAC/E,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,eAAe,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;AAEvE,SAAS;AACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAExB,SAAS,cAAc,CAAI,GAAQ;IACjC,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAC1D,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,cAAc,CAAS,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACrD,OAAO,CAAC,GAAG,CAAC,cAAc,CAAS,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAChE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;AAEhC,SAAS;AACT,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAExB,SAAS,UAAU,CAAI,CAAI,EAAE,CAAI,EAAE,CAAI;IACnC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,UAAU,CAAU,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AAC7C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAU,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AACvD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAW,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC","sourcesContent":["// task 1\r\nconsole.log('Task 1: ');\r\n\r\ninterface SumEvenNumbers {\r\n    (array: number[]): number;\r\n} \r\n\r\nconst sumEvenNumbers: SumEvenNumbers = (array) => {\r\n    return array.reduce((acc, number) => (number%2 === 0 ? acc + number : acc), 0) \r\n}\r\n\r\nconst arr: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\nconsole.log('Sum of even numbers: ', sumEvenNumbers(arr));\r\n\r\n// task 2\r\nconsole.log('Task 2: ');\r\n\r\n\r\ninterface StringToBooleanFunction {\r\n  (str: string): boolean;\r\n}\r\n\r\nconst isEmptyString: StringToBooleanFunction = str => str.length === 0;\r\n\r\nconsole.log('String is empty: ', isEmptyString(''));\r\nconsole.log('String is empty: ', isEmptyString('Hello'));\r\n\r\n// task 3\r\nconsole.log('Task 3: ');\r\n\r\ntype CompareStrings = (str1: string, str2: string) => boolean;\r\n\r\nconst areStringsEqual: CompareStrings = (str1, str2) => str1 === str2;\r\n\r\nconsole.log('String are equal: ', areStringsEqual('TypeScript', 'TypeScript'));\r\nconsole.log('String are equal: ', areStringsEqual('TypeScropt', 'TS'));\r\n\r\n// task 4\r\nconsole.log('Task 4: ');\r\n\r\nfunction getLastElement<T>(arr: T[]): T | undefined {\r\n  return arr.length > 0 ? arr[arr.length - 1] : undefined;\r\n}\r\n\r\nconsole.log(getLastElement<number>([1, 2,4, 8, 50]));\r\nconsole.log(getLastElement<string>(['kiwi', 'apple', 'mango']));\r\nconsole.log(getLastElement([]));\r\n\r\n// task 5\r\nconsole.log('Task 5: ');\r\n\r\nfunction makeTriple<T>(a: T, b: T, c: T): T[] {\r\n    return [a, b, c];\r\n}\r\n\r\nconsole.log(makeTriple<number>( 10, 20, 30));\r\nconsole.log(makeTriple<string>( 'Max', 'Paul', 'Leo'));\r\nconsole.log(makeTriple<boolean>( true, false, true));\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}